worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;
    resolver 127.0.0.11 valid=30s;

    server {
        listen 80;
        server_name localhost;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate     /etc/openresty/certs/localhost.pem;
        ssl_certificate_key /etc/openresty/certs/localhost-key.pem;
        set $target "";
        location = /health {
            default_type application/json;
            return 200 '{"status":"ok","gateway":"running"}';
        }

        # location /docs {
        #     proxy_pass http://ADMINISTRATION_MS:PORT/docs;
        # }
        
        # Middleware de autenticação
        access_by_lua_file /etc/openresty/lua/auth.lua;

        location / {
            limit_req zone=one burst=20 nodelay;
            # Lua para definir a rota/microserviço destino
            rewrite_by_lua_file /etc/openresty/lua/routes.lua;

            # Proxy para o microserviço definido em $target
            proxy_pass $target;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_verify off;
        }
    }
}
